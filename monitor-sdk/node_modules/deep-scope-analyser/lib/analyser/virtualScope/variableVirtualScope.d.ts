import { VirtualScope, VScopeContentType, VirtualScopeType } from ".";
import { Variable, Scope, ScopeManager } from "../..";
export declare class VariableVirtualScope implements VirtualScope {
    readonly contentType: VScopeContentType;
    readonly variable: Variable;
    isChildrenDependent: boolean;
    readonly children: VirtualScope[];
    readonly pureRange: [number, number] | undefined;
    constructor(contentType: VScopeContentType, variable: Variable, isChildrenDependent?: boolean);
    readonly type: VirtualScopeType;
    readonly declarator: any;
    readonly isImport: boolean;
    findAllReferencesToVirtualScope(visitedSet: WeakSet<Scope>, scopeManager: ScopeManager, virtualScopeMap: WeakMap<Variable, VirtualScope>): void;
    private getModuleScope;
    private traverseDeclarationScope;
    private traverseExpressionScope;
    private traverseScopes;
    private traversePureDeclarator;
    private addToVs;
}
