import { Scope } from "./scope";
import { ScopeManager } from "../scopeManager";
import { Definition } from "../definition";
import { Variable } from "../variable";
import * as ESTree from "estree";
import { ImportManager } from "../importManager";
import { ExportManager } from "../exportManager";
export declare class ModuleScope extends Scope {
    readonly importManager: ImportManager;
    readonly exportManager: ExportManager;
    isExportingNamedDeclaration: boolean;
    constructor(scopeManager: ScopeManager, upperScope: Scope, block: ESTree.Node);
    __define(node: ESTree.Node, def: Definition): Variable | null;
}
